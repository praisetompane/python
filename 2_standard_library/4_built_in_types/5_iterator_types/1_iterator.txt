def iterator:
  - formal:
    - in words: an object that represents a stream of data.

  - plain english: ???

  - intuition: any object that implements any of the two:
    - __iter__ and __next__
    - __getitem__

  - properties:
    - iterator protocol: https://docs.python.org/3/c-api/iter.html
    - types:
      - sequence iterator
      - callable object + sentinel value iterator    
    - specification: PEP 234 â€“ Iterators. https://peps.python.org/pep-0234/
    - implementation: https://github.com/python/cpython/blob/main/Objects/iterobject.c

    - forward and reserve traversal.
      - can only be traversed once.
    
  - examples: ???

  - use cases: ???
      
  - proof: None. It is a definition.
    
References:
  The Python Standard Library. 2025. https://docs.python.org/3/glossary.html#term-iterator

